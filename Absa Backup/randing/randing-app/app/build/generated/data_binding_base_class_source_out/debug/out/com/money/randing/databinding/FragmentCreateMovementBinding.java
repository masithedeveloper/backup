// Generated by view binder compiler. Do not edit!
package com.money.randing.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.money.randing.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreateMovementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AutoCompleteTextView autoTextViewMovement;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final TextInputEditText editTextAmount;

  @NonNull
  public final TextInputEditText editTextDate;

  @NonNull
  public final TextInputEditText editTextDescription;

  @NonNull
  public final TextInputLayout inputLayoutAmount;

  @NonNull
  public final TextInputLayout inputLayoutDate;

  @NonNull
  public final TextInputLayout inputLayoutDescription;

  @NonNull
  public final TextInputLayout inputLayoutMovement;

  @NonNull
  public final TextView title;

  private FragmentCreateMovementBinding(@NonNull ConstraintLayout rootView,
      @NonNull AutoCompleteTextView autoTextViewMovement, @NonNull Button btnSave,
      @NonNull TextInputEditText editTextAmount, @NonNull TextInputEditText editTextDate,
      @NonNull TextInputEditText editTextDescription, @NonNull TextInputLayout inputLayoutAmount,
      @NonNull TextInputLayout inputLayoutDate, @NonNull TextInputLayout inputLayoutDescription,
      @NonNull TextInputLayout inputLayoutMovement, @NonNull TextView title) {
    this.rootView = rootView;
    this.autoTextViewMovement = autoTextViewMovement;
    this.btnSave = btnSave;
    this.editTextAmount = editTextAmount;
    this.editTextDate = editTextDate;
    this.editTextDescription = editTextDescription;
    this.inputLayoutAmount = inputLayoutAmount;
    this.inputLayoutDate = inputLayoutDate;
    this.inputLayoutDescription = inputLayoutDescription;
    this.inputLayoutMovement = inputLayoutMovement;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateMovementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateMovementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_movement, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateMovementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.auto_text_view_movement;
      AutoCompleteTextView autoTextViewMovement = rootView.findViewById(id);
      if (autoTextViewMovement == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = rootView.findViewById(id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.edit_text_amount;
      TextInputEditText editTextAmount = rootView.findViewById(id);
      if (editTextAmount == null) {
        break missingId;
      }

      id = R.id.edit_text_date;
      TextInputEditText editTextDate = rootView.findViewById(id);
      if (editTextDate == null) {
        break missingId;
      }

      id = R.id.edit_text_description;
      TextInputEditText editTextDescription = rootView.findViewById(id);
      if (editTextDescription == null) {
        break missingId;
      }

      id = R.id.input_layout_amount;
      TextInputLayout inputLayoutAmount = rootView.findViewById(id);
      if (inputLayoutAmount == null) {
        break missingId;
      }

      id = R.id.input_layout_date;
      TextInputLayout inputLayoutDate = rootView.findViewById(id);
      if (inputLayoutDate == null) {
        break missingId;
      }

      id = R.id.input_layout_description;
      TextInputLayout inputLayoutDescription = rootView.findViewById(id);
      if (inputLayoutDescription == null) {
        break missingId;
      }

      id = R.id.input_layout_movement;
      TextInputLayout inputLayoutMovement = rootView.findViewById(id);
      if (inputLayoutMovement == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new FragmentCreateMovementBinding((ConstraintLayout) rootView, autoTextViewMovement,
          btnSave, editTextAmount, editTextDate, editTextDescription, inputLayoutAmount,
          inputLayoutDate, inputLayoutDescription, inputLayoutMovement, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
