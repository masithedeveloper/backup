// Generated by Dagger (https://dagger.dev).
package com.money.randing.ui.people.detail;

import com.money.randing.domain.repository.movement.MovementRepository;
import com.money.randing.domain.repository.person.PersonRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonDetailViewModel_Factory implements Factory<PersonDetailViewModel> {
  private final Provider<PersonRepository> personRepositoryProvider;

  private final Provider<MovementRepository> movementRepositoryProvider;

  public PersonDetailViewModel_Factory(Provider<PersonRepository> personRepositoryProvider,
      Provider<MovementRepository> movementRepositoryProvider) {
    this.personRepositoryProvider = personRepositoryProvider;
    this.movementRepositoryProvider = movementRepositoryProvider;
  }

  @Override
  public PersonDetailViewModel get() {
    return newInstance(personRepositoryProvider.get(), movementRepositoryProvider.get());
  }

  public static PersonDetailViewModel_Factory create(
      Provider<PersonRepository> personRepositoryProvider,
      Provider<MovementRepository> movementRepositoryProvider) {
    return new PersonDetailViewModel_Factory(personRepositoryProvider, movementRepositoryProvider);
  }

  public static PersonDetailViewModel newInstance(PersonRepository personRepository,
      MovementRepository movementRepository) {
    return new PersonDetailViewModel(personRepository, movementRepository);
  }
}
