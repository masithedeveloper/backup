// Generated by Dagger (https://dagger.dev).
package com.money.randing.di;

import com.money.randing.data.db.AppDatabase;
import com.money.randing.data.db.dao.MovementDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideMovementDaoFactory implements Factory<MovementDao> {
  private final Provider<AppDatabase> databaseProvider;

  public AppModule_ProvideMovementDaoFactory(Provider<AppDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public MovementDao get() {
    return provideMovementDao(databaseProvider.get());
  }

  public static AppModule_ProvideMovementDaoFactory create(Provider<AppDatabase> databaseProvider) {
    return new AppModule_ProvideMovementDaoFactory(databaseProvider);
  }

  public static MovementDao provideMovementDao(AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideMovementDao(database));
  }
}
