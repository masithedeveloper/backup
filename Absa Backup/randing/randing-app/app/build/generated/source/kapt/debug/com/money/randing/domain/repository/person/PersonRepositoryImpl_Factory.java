// Generated by Dagger (https://dagger.dev).
package com.money.randing.domain.repository.person;

import com.money.randing.data.db.dao.MovementDao;
import com.money.randing.data.db.dao.PersonDao;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonRepositoryImpl_Factory implements Factory<PersonRepositoryImpl> {
  private final Provider<PersonDao> personDaoProvider;

  private final Provider<MovementDao> movementDaoProvider;

  public PersonRepositoryImpl_Factory(Provider<PersonDao> personDaoProvider,
      Provider<MovementDao> movementDaoProvider) {
    this.personDaoProvider = personDaoProvider;
    this.movementDaoProvider = movementDaoProvider;
  }

  @Override
  public PersonRepositoryImpl get() {
    return newInstance(personDaoProvider.get(), movementDaoProvider.get());
  }

  public static PersonRepositoryImpl_Factory create(Provider<PersonDao> personDaoProvider,
      Provider<MovementDao> movementDaoProvider) {
    return new PersonRepositoryImpl_Factory(personDaoProvider, movementDaoProvider);
  }

  public static PersonRepositoryImpl newInstance(PersonDao personDao, MovementDao movementDao) {
    return new PersonRepositoryImpl(personDao, movementDao);
  }
}
