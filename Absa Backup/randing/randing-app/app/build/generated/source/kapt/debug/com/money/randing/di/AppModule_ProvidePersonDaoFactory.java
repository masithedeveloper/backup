// Generated by Dagger (https://dagger.dev).
package com.money.randing.di;

import com.money.randing.data.db.AppDatabase;
import com.money.randing.data.db.dao.PersonDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidePersonDaoFactory implements Factory<PersonDao> {
  private final Provider<AppDatabase> databaseProvider;

  public AppModule_ProvidePersonDaoFactory(Provider<AppDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public PersonDao get() {
    return providePersonDao(databaseProvider.get());
  }

  public static AppModule_ProvidePersonDaoFactory create(Provider<AppDatabase> databaseProvider) {
    return new AppModule_ProvidePersonDaoFactory(databaseProvider);
  }

  public static PersonDao providePersonDao(AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providePersonDao(database));
  }
}
